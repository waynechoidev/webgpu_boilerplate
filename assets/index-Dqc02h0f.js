var L=Object.defineProperty;var Y=(e,t,i)=>t in e?L(e,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[t]=i;var h=(e,t,i)=>Y(e,typeof t!="symbol"?t+"":t,i);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))n(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function i(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(r){if(r.ep)return;r.ep=!0;const s=i(r);fetch(r.href,s)}})();async function I(e){const i=await(await fetch(e)).blob();return await createImageBitmap(i,{colorSpaceConversion:"none"})}async function R(e,t){let i=e;const n=[i];let r=0;for(;r<t&&(i.width>1||i.height>1);)i=await N(i),n.push(i),r++;return n}async function N(e){const t=Math.max(1,e.width/2|0),i=Math.max(1,e.height/2|0),n=document.createElement("canvas");n.width=t,n.height=i;const r=n.getContext("2d");if(!r)throw new Error("Unable to get 2D context");return r.drawImage(e,0,0,t,i),createImageBitmap(n)}const F=Math.PI/180;function M(e){return e*F}var z=`struct VSOutput {
  @builtin(position) position: vec4f,
};

struct Vertex {
  @location(0) position: vec3f,
};

struct MatrixUniforms {
  model: mat4x4f,
  view: mat4x4f,
  projection: mat4x4f,
};

@group(0) @binding(0) var<uniform> uni: MatrixUniforms;

@vertex fn vs(
  input: Vertex,
) -> VSOutput {
  var output: VSOutput;
  
  output.position = uni.projection * uni.view * uni.model * vec4f(input.position, 1.0);
  return output;
}`,H=`struct VSOutput {
  @builtin(position) position: vec4f,
};

struct Vertex {
  @location(0) position: vec3f,
};

struct MatrixUniforms {
  model: mat4x4f,
  view: mat4x4f,
  projection: mat4x4f,
};

@fragment fn fs(input: VSOutput) -> @location(0) vec4f {
 
  return vec4f(1.0, 1.0, 1.0, 1.0);
}`,T=1e-6,x=typeof Float32Array<"u"?Float32Array:Array;Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)});function E(){var e=new x(16);return x!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0),e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}function q(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}function X(e,t,i){var n=i[0],r=i[1],s=i[2],a,c,o,p,l,f,d,u,m,_,g,w;return t===e?(e[12]=t[0]*n+t[4]*r+t[8]*s+t[12],e[13]=t[1]*n+t[5]*r+t[9]*s+t[13],e[14]=t[2]*n+t[6]*r+t[10]*s+t[14],e[15]=t[3]*n+t[7]*r+t[11]*s+t[15]):(a=t[0],c=t[1],o=t[2],p=t[3],l=t[4],f=t[5],d=t[6],u=t[7],m=t[8],_=t[9],g=t[10],w=t[11],e[0]=a,e[1]=c,e[2]=o,e[3]=p,e[4]=l,e[5]=f,e[6]=d,e[7]=u,e[8]=m,e[9]=_,e[10]=g,e[11]=w,e[12]=a*n+l*r+m*s+t[12],e[13]=c*n+f*r+_*s+t[13],e[14]=o*n+d*r+g*s+t[14],e[15]=p*n+u*r+w*s+t[15]),e}function G(e,t,i){var n=Math.sin(i),r=Math.cos(i),s=t[4],a=t[5],c=t[6],o=t[7],p=t[8],l=t[9],f=t[10],d=t[11];return t!==e&&(e[0]=t[0],e[1]=t[1],e[2]=t[2],e[3]=t[3],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[4]=s*r+p*n,e[5]=a*r+l*n,e[6]=c*r+f*n,e[7]=o*r+d*n,e[8]=p*r-s*n,e[9]=l*r-a*n,e[10]=f*r-c*n,e[11]=d*r-o*n,e}function O(e,t,i){var n=Math.sin(i),r=Math.cos(i),s=t[0],a=t[1],c=t[2],o=t[3],p=t[8],l=t[9],f=t[10],d=t[11];return t!==e&&(e[4]=t[4],e[5]=t[5],e[6]=t[6],e[7]=t[7],e[12]=t[12],e[13]=t[13],e[14]=t[14],e[15]=t[15]),e[0]=s*r-p*n,e[1]=a*r-l*n,e[2]=c*r-f*n,e[3]=o*r-d*n,e[8]=s*n+p*r,e[9]=a*n+l*r,e[10]=c*n+f*r,e[11]=o*n+d*r,e}function j(e,t,i,n,r){var s=1/Math.tan(t/2),a;return e[0]=s/i,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=s,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,r!=null&&r!==1/0?(a=1/(n-r),e[10]=(r+n)*a,e[14]=2*r*n*a):(e[10]=-1,e[14]=-2*n),e}var W=j;function $(e,t,i,n){var r,s,a,c,o,p,l,f,d,u,m=t[0],_=t[1],g=t[2],w=n[0],B=n[1],P=n[2],U=i[0],C=i[1],D=i[2];return Math.abs(m-U)<T&&Math.abs(_-C)<T&&Math.abs(g-D)<T?q(e):(l=m-U,f=_-C,d=g-D,u=1/Math.hypot(l,f,d),l*=u,f*=u,d*=u,r=B*d-P*f,s=P*l-w*d,a=w*f-B*l,u=Math.hypot(r,s,a),u?(u=1/u,r*=u,s*=u,a*=u):(r=0,s=0,a=0),c=f*a-d*s,o=d*r-l*a,p=l*s-f*r,u=Math.hypot(c,o,p),u?(u=1/u,c*=u,o*=u,p*=u):(c=0,o=0,p=0),e[0]=r,e[1]=c,e[2]=l,e[3]=0,e[4]=s,e[5]=o,e[6]=f,e[7]=0,e[8]=a,e[9]=p,e[10]=d,e[11]=0,e[12]=-(r*m+s*_+a*g),e[13]=-(c*m+o*_+p*g),e[14]=-(l*m+f*_+d*g),e[15]=1,e)}function y(){var e=new x(3);return x!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function v(e,t,i){var n=new x(3);return n[0]=e,n[1]=t,n[2]=i,n}function b(e,t,i){var n=t[0],r=t[1],s=t[2],a=i[3]*n+i[7]*r+i[11]*s+i[15];return a=a||1,e[0]=(i[0]*n+i[4]*r+i[8]*s+i[12])/a,e[1]=(i[1]*n+i[5]*r+i[9]*s+i[13])/a,e[2]=(i[2]*n+i[6]*r+i[10]*s+i[14])/a,e}(function(){var e=y();return function(t,i,n,r,s,a){var c,o;for(i||(i=3),n||(n=0),r?o=Math.min(r*i+n,t.length):o=t.length,c=n;c<o;c+=i)e[0]=t[c],e[1]=t[c+1],e[2]=t[c+2],s(e,e,a),t[c]=e[0],t[c+1]=e[1],t[c+2]=e[2];return t}})();function K(){var e=new x(2);return x!=Float32Array&&(e[0]=0,e[1]=0),e}function S(e,t){var i=new x(2);return i[0]=e,i[1]=t,i}function J(e,t,i){return e[0]=t[0]+i[0],e[1]=t[1]+i[1],e}(function(){var e=K();return function(t,i,n,r,s,a){var c,o;for(i||(i=2),n||(n=0),r?o=Math.min(r*i+n,t.length):o=t.length,c=n;c<o;c+=i)e[0]=t[c],e[1]=t[c+1],s(e,e,a),t[c]=e[0],t[c+1]=e[1];return t}})();class Q{constructor({position:t,center:i,up:n,initialRotate:r}){h(this,"_position");h(this,"_center");h(this,"_up");h(this,"_rotate");h(this,"_isMobile");h(this,"_isDragging");h(this,"_initialX");h(this,"_initialY");this._position=t,this._center=i,this._up=n,this._rotate=r,this._isDragging=!1,this._initialX=0,this._initialY=0,this._isMobile=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),this.initializeEvent()}get position(){const t=this.getViewRotationMatrix(),i=y();return b(i,this._position,t),i}get up(){const t=this.getViewRotationMatrix(),i=y();return b(i,this._up,t),i}getViewMatrix(){const t=E(),i=this.getViewRotationMatrix(),n=y(),r=y(),s=y();return b(n,this._position,i),b(r,this._center,i),b(s,this._up,i),$(t,n,r,s),t}initializeEvent(){const t=this._isMobile?"touchstart":"mousedown",i=this._isMobile?"touchmove":"mousemove",n=this._isMobile?"touchend":"mouseup";document.addEventListener(t,r=>{this._isDragging=!0,this._initialX=this._isMobile?r.touches[0].clientX:r.clientX,this._initialY=this._isMobile?r.touches[0].clientY:r.clientY}),document.addEventListener(i,r=>{if(this._isDragging){const s=this._isMobile?r.touches[0].clientX:r.clientX,a=this._isMobile?r.touches[0].clientY:r.clientY,c=s-this._initialX,o=a-this._initialY;this._rotate=J(this._rotate,this._rotate,S(o/10,c/10)),this._initialX=s,this._initialY=a}}),document.addEventListener(n,()=>{this._isDragging=!1})}getViewRotationMatrix(){const t=E();return O(t,t,M(this._rotate[1])),G(t,t,M(this._rotate[0])),t}}class Z{constructor(){h(this,"_device");h(this,"_canvasContext");h(this,"_commandEncoder");h(this,"WIDTH");h(this,"HEIGHT");this.WIDTH=window.innerWidth,this.HEIGHT=window.innerHeight}async requestDevice(){var i;const t=await((i=navigator.gpu)==null?void 0:i.requestAdapter());this._device=await(t==null?void 0:t.requestDevice()),this._device||(console.error("Cannot find a device"),alert("Your device does not support WebGPU"))}async getCanvasContext(){const t=document.querySelector("canvas");t||console.error("Cannot find a canvas"),t.width=this.WIDTH,t.height=this.HEIGHT,this._canvasContext=t.getContext("webgpu"),this._canvasContext||console.error("Cannot find a canvas context");const i={device:this._device,format:navigator.gpu.getPreferredCanvasFormat(),usage:GPUTextureUsage.RENDER_ATTACHMENT,alphaMode:"opaque"};this._canvasContext.configure(i)}async createRenderPipeline({label:t,vertexShader:i,fragmentShader:n,vertexBufferLayout:r,topology:s="triangle-list"}){const a={label:t,layout:"auto",vertex:{module:this._device.createShaderModule({label:`${t} vertex shader`,code:i}),buffers:r},fragment:{module:this._device.createShaderModule({label:`${t} fragment shader`,code:n}),targets:[{format:navigator.gpu.getPreferredCanvasFormat()}]},primitive:{topology:s,cullMode:"back"},depthStencil:{depthWriteEnabled:!0,depthCompare:"less-equal",format:"depth24plus"}};return this._device.createRenderPipeline(a)}async createComputePipeline({label:t,computeShader:i}){const n={label:t,layout:"auto",compute:{module:this._device.createShaderModule({label:`${t} compute shader`,code:i})}};return this._device.createComputePipeline(n)}async createCubemapTexture(t,i=0){const n=await Promise.all(t.map(I)),r=this._device.createTexture({label:"yellow F on red",size:[n[0].width,n[0].height,n.length],mipLevelCount:i+1,format:"rgba8unorm",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT});r||console.error("Failed to load cubemap texture");for(let s=0;s<6;s++)(await R(n[s],i)).forEach((c,o)=>{this._device.queue.copyExternalImageToTexture({source:c,flipY:!1},{texture:r,origin:[0,0,s],mipLevel:o},{width:c.width,height:c.height})});return r}async createTexture(t,i=0){const n=await I(t),r=await R(n,i),s=this._device.createTexture({label:"yellow F on red",size:[r[0].width,r[0].height],mipLevelCount:r.length,format:"rgba8unorm",usage:GPUTextureUsage.TEXTURE_BINDING|GPUTextureUsage.COPY_DST|GPUTextureUsage.RENDER_ATTACHMENT});return s||console.error("Failed to load texture"),r.forEach((a,c)=>{this._device.queue.copyExternalImageToTexture({source:a,flipY:!1},{texture:s,mipLevel:c},{width:a.width,height:a.height})}),s}getVerticesData(t){const i=[];for(let n=0;n<t.length;n++){const{position:r}=t[n];i.push(...r)}return i}async getRenderPassDesc(){const t=this._canvasContext.getCurrentTexture(),i=this._device.createTexture({size:[t.width,t.height],format:"depth24plus",usage:GPUTextureUsage.RENDER_ATTACHMENT}),n={view:t.createView(),clearValue:[0,0,0,1],loadOp:"clear",storeOp:"store"},r={view:i.createView(),depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store"};return{label:"render pass",colorAttachments:[n],depthStencilAttachment:r}}async createEncoder(){this._commandEncoder=this._device.createCommandEncoder({label:"encoder"})}async submitCommandBuffer(){const t=this._commandEncoder.finish();this._device.queue.submit([t])}}function k(){const e=[],t=[];return e.push({position:v(-1,1,-1)}),e.push({position:v(-1,-1,-1)}),e.push({position:v(1,1,-1)}),e.push({position:v(1,-1,-1)}),e.push({position:v(-1,1,1)}),e.push({position:v(1,1,1)}),e.push({position:v(-1,-1,1)}),e.push({position:v(1,-1,1)}),t.push([0,1,2],[2,1,3],[2,3,5],[5,3,7],[5,7,4],[4,7,6],[4,6,0],[0,6,1],[4,0,5],[5,0,2],[1,6,3],[3,6,7]),{vertices:e,indices:t,length:t.length*3}}class ee extends Z{constructor(){super();h(this,"_mainPipeline");h(this,"_cubeVertexBuffer");h(this,"_cubeIndexBuffer");h(this,"_cubeIndicesLength");h(this,"_matrixUniformBuffer");h(this,"_mainBindGroup");h(this,"_model");h(this,"_camera");h(this,"_projection")}async initialize(){await this.requestDevice(),await this.getCanvasContext(),this._mainPipeline=await this.createRenderPipeline({label:"main pipeline",vertexShader:z,fragmentShader:H,vertexBufferLayout:[{arrayStride:3*Float32Array.BYTES_PER_ELEMENT,attributes:[{shaderLocation:0,offset:0,format:"float32x3"}]}]}),await this.createVertexBuffers(),await this.createOtherBuffers(),await this.createBindGroups(),await this.setMatrix()}async run(){await this.writeBuffers(),await this.createEncoder(),await this.draw(),await this.submitCommandBuffer()}async createVertexBuffers(){const i=k(),n=new Float32Array(this.getVerticesData(i.vertices));this._cubeVertexBuffer=this._device.createBuffer({label:"cube vertex buffer",size:n.byteLength,usage:GPUBufferUsage.VERTEX|GPUBufferUsage.COPY_DST}),this._device.queue.writeBuffer(this._cubeVertexBuffer,0,n);const r=new Uint32Array(i.indices.flat());this._cubeIndicesLength=i.length,this._cubeIndexBuffer=this._device.createBuffer({label:"cube index buffer",size:r.byteLength,usage:GPUBufferUsage.INDEX|GPUBufferUsage.COPY_DST}),this._device.queue.writeBuffer(this._cubeIndexBuffer,0,r)}async createOtherBuffers(){this._matrixUniformBuffer=this._device.createBuffer({label:"matrix uniforms",size:48*Float32Array.BYTES_PER_ELEMENT,usage:GPUBufferUsage.UNIFORM|GPUBufferUsage.COPY_DST})}async createBindGroups(){this._mainBindGroup=this._device.createBindGroup({label:"bind group for object",layout:this._mainPipeline.getBindGroupLayout(0),entries:[{binding:0,resource:{buffer:this._matrixUniformBuffer}}]})}async setMatrix(){this._model=E(),X(this._model,this._model,v(0,0,-4)),G(this._model,this._model,M(25)),O(this._model,this._model,M(-200)),this._camera=new Q({position:v(0,0,2.5),center:v(0,0,0),up:v(0,1,0),initialRotate:S(0,0)}),this._projection=E(),W(this._projection,M(45),this.WIDTH/this.HEIGHT,.1,100)}async writeBuffers(){const i=this._camera.getViewMatrix();this._device.queue.writeBuffer(this._matrixUniformBuffer,0,new Float32Array([...this._model,...i,...this._projection]))}async draw(){const i=await this.getRenderPassDesc(),n=this._commandEncoder.beginRenderPass(i);n.setPipeline(this._mainPipeline),n==null||n.setBindGroup(0,this._mainBindGroup),n.setVertexBuffer(0,this._cubeVertexBuffer),n.setIndexBuffer(this._cubeIndexBuffer,"uint32"),n.drawIndexed(this._cubeIndicesLength),n.end()}}const V=new ee;let A=0;async function te(){await V.initialize();async function e(){const t=performance.now(),i=t-A;A=t,await V.run(),console.log(i),requestAnimationFrame(e)}e()}te();
